| Natural Language Question | MongoDB Query | Collection Name |
|-------------------------|--------------|-----------------|
| Update the status of books with the category "Fiction" to "PUBLISHED" | db.books.updateMany({ categories: "Fiction" }, { $set: { status: "PUBLISHED" } }) | books |
| Set the long description to be the same as the short description for books with a page count less than 200 | db.books.updateMany({ pageCount: { $lt: 200 } }, { $set: { longDescription: "$shortDescription" } }) | books |
| Add a new category "Bestseller" to books with more than 1000 pages | db.books.updateMany({ pageCount: { $gt: 1000 } }, { $push: { categories: "Bestseller" } }) | books |
| Remove the "Science Fiction" category from books published before 2000 | db.books.updateMany({ publishedDate: { $lt: new Date("2000-01-01") } }, { $pull: { categories: "Science Fiction" } }) | books |
| Add the string " (Hardcover)" to the title of books with more than 500 pages | db.books.updateMany({ pageCount: { $gt: 500 } }, { $set: { title: { $concat: ["$title", " (Hardcover)"] } } }) | books |
| Remove the first author from books with more than 5 authors | db.books.updateMany({ authors: { $size: { $gt: 5 } } }, { $push: { authors: { $slice: ["$authors", 1] } } }) | books |
| Set the published date to January 1st of the current year for books with the category "New Releases" | db.books.updateMany({ categories: "New Releases" }, { $set: { publishedDate: new Date(new Date().getFullYear(), 0, 1) } }) | books |
| Add a new field "editorsPick" with the value true for books with the category "Biography" and more than 400 pages | db.books.updateMany({ $and: [{ categories: "Biography" }, { pageCount: { $gt: 400 } }] }, { $set: { editorsPick: true } }, { upsert: false, multi: true }) | books |

| Update the first book with the title "The Great Gatsby" to have a status of "PUBLISHED" | db.books.update({ title: "The Great Gatsby" }, { $set: { status: "PUBLISHED" } }) | books |
| Update the book with the ISBN "978-0345391803" to add "Classic Literature" to its categories array | db.books.update({ isbn: "978-0345391803" }, { $push: { categories: "Classic Literature" } }) | books |
| Update the book with the title "War and Peace" to remove the author "Leo Tolstoy" from its authors array | db.books.update({ title: "War and Peace" }, { $pull: { authors: "Leo Tolstoy" } }) | books |
| Update the first book with a page count greater than 800 to add a new field "hardcover" with the value true | db.books.update({ pageCount: { $gt: 800 } }, { $set: { hardcover: true } }, { multi: false }) | books |
| Update all books published before 2000 to set their status to "ARCHIVED" | db.books.update({ publishedDate: { $lt: new Date("2000-01-01") } }, { $set: { status: "ARCHIVED" } }, { multi: true }) | books |
| Update the first book with the category "Science Fiction" to add "Sci-Fi" to its categories array if it doesn't already exist | db.books.update({ categories: "Science Fiction" }, { $addToSet: { categories: "Sci-Fi" } }, { multi: false }) | books |
| Update the book with the ISBN "978-0345391803" to set its thumbnail URL to "https://example.com/book-cover.jpg" | db.books.update({ isbn: "978-0345391803" }, { $set: { thumbnailUrl: "https://example.com/book-cover.jpg" } }) | books |
| Update all books with the author "J.K. Rowling" to set their status to "BESTSELLER" | db.books.update({ authors: "J.K. Rowling" }, { $set: { status: "BESTSELLER" } }, { multi: true }) | books |

| Update the card balance of all users with a Visa card to $2000. | `db.users.updateMany({"card.card_type": "Visa"}, {$set: {"card.balance": "2000"}})` | users |
| Change the marital status of users from Canada to single (false). | `db.users.updateMany({"address.country": "Canada"}, {$set: {"married_status": false}})` | users |
| Increment the card balance of users from India by $500. | `db.users.updateMany({"address.country": "India"}, {$inc: {"card.balance": 500}})` | users |
| Set the card type of users from the USA to 'American Express' if their current card type is not 'Visa' or 'Mastercard'. | `db.users.updateMany({"address.country": "USA", "card.card_type": {$nin: ["Visa", "Mastercard"]}}, {$set: {"card.card_type": "American Express"}})` | users |
| Update the country code for users from the United Kingdom to 'GBR'. | `db.users.updateMany({"address.country": "United Kingdom"}, {$set: {"address.country_code": "GBR"}})` | users |
| Change the email addresses of married users from Germany to a '@newemail.com'. | `db.users.updateMany({"married_status": true, "address.country": "Germany"}, {$set: {"email": {$concat: ["$email".split("@")[0], "@newemail.com"]}}})` | users |
| Increment the balance of users with a Mastercard by 10% if their current balance is less than $5000. | `db.users.updateMany({"card.card_type": "Mastercard", "card.balance": {$lt: "5000"}}, {$mul: {"card.balance": 1.1}})` | users |
| Set the city and state for users from Australia to 'Sydney' and 'New South Wales', respectively. | `db.users.updateMany({"address.country": "Australia"}, {$set: {"address.city": "Sydney", "address.state": "New South Wales"}})` | users |
| Change the currency code of all users' cards to 'USD'. | `db.users.updateMany({}, {$set: {"card.currency_code": "USD"}})` | users |
| Update the last name of female users from France to their current last name followed by 'NEW'. | `db.users.updateMany({"gender": "female", "address.country": "France"}, {$set: {"last_name": {$concat: ["$last_name", "NEW"]}}})` | users |

| Update the card balance of all users with a Discover card to $3000. | `db.users.updateMany({"card.card_type": "Discover"}, {$set: {"card.balance": "3000"}})` | users |
| Change the marital status of users from Spain to married (true). | `db.users.updateMany({"address.country": "Spain"}, {$set: {"married_status": true}})` | users |
| Decrement the card balance of users from Brazil by $1000. | `db.users.updateMany({"address.country": "Brazil"}, {$inc: {"card.balance": -1000}})` | users |
| Set the card type of users from Mexico to 'Visa' if their current card type is not 'Mastercard' or 'American Express'. | `db.users.updateMany({"address.country": "Mexico", "card.card_type": {$nin: ["Mastercard", "American Express"]}}, {$set: {"card.card_type": "Visa"}})` | users |
| Update the country code for users from Italy to 'ITA'. | `db.users.updateMany({"address.country": "Italy"}, {$set: {"address.country_code": "ITA"}})` | users |
| Change the email addresses of single users from Japan to a new domain (e.g., '@newemail.jp'). | `db.users.updateMany({"married_status": false, "address.country": "Japan"}, {$set: {"email": {$concat: ["$email".split("@")[0], "@newemail.jp"]}}})` | users |
| Increment the balance of users with an American Express card by 15% if their current balance is greater than $10000. | `db.users.updateMany({"card.card_type": "American Express", "card.balance": {$gt: "10000"}}, {$mul: {"card.balance": 1.15}})` | users |
| Set the city and state for users from China to 'Beijing' and 'Beijing', respectively. | `db.users.updateMany({"address.country": "China"}, {$set: {"address.city": "Beijing", "address.state": "Beijing"}})` | users |
| Change the currency code of all users' cards to 'EUR'. | `db.users.updateMany({}, {$set: {"card.currency_code": "EUR"}})` | users |
| Update the first name of male users from Russia to their current first name followed by 'NEW'. | `db.users.updateMany({"gender": "male", "address.country": "Russia"}, {$set: {"first_name": {$concat: ["$first_name", "NEW"]}}})` | users |
| Set the card balance of all users with a Mastercard to $5000. | `db.users.updateMany({"card.card_type": "Mastercard"}, {$set: {"card.balance": "5000"}})` | users |
| Change the marital status of users from South Korea to single (false). | `db.users.updateMany({"address.country": "South Korea"}, {$set: {"married_status": false}})` | users |
| Increment the card balance of users from Turkey by $2000. | `db.users.updateMany({"address.country": "Turkey"}, {$inc: {"card.balance": 2000}})` | users |
| Set the card type of users from Poland to 'Mastercard' if their current card type is not 'Visa' or 'Discover'. | `db.users.updateMany({"address.country": "Poland", "card.card_type": {$nin: ["Visa", "Discover"]}}, {$set: {"card.card_type": "Mastercard"}})` | users |
| Update the country code for users from the Netherlands to 'NLD'. | `db.users.updateMany({"address.country": "Netherlands"}, {$set: {"address.country_code": "NLD"}})` | users |
| Change the email addresses of married users from Belgium to a new domain (e.g., '@newemail.be'). | `db.users.updateMany({"married_status": true, "address.country": "Belgium"}, {$set: {"email": {$concat: ["$email".split("@")[0], "@newemail.be"]}}})` | users |
| Increment the balance of users with a Visa card by 20% if their current balance is less than $2000. | `db.users.updateMany({"card.card_type": "Visa", "card.balance": {$lt: "2000"}}, {$mul: {"card.balance": 1.2}})` | users |
| Set the city and state for users from Switzerland to 'Zurich' and 'Zurich', respectively. | `db.users.updateMany({"address.country": "Switzerland"}, {$set: {"address.city": "Zurich", "address.state": "Zurich"}})` | users |
| Change the currency code of all users' cards to 'GBP'. | `db.users.updateMany({}, {$set: {"card.currency_code": "GBP"}})` | users |
| Update the last name of female users from Sweden to their current last name followed by 'NEW'. | `db.users.updateMany({"gender": "female", "address.country": "Sweden"}, {$set: {"last_name": {$concat: ["$last_name", "NEW"]}}})` | users |
| Set the card balance of all users with a Discover card to $4000. | `db.users.updateMany({"card.card_type": "Discover"}, {$set: {"card.balance": "4000"}})` | users |
| Change the marital status of users from Norway to married (true). | `db.users.updateMany({"address.country": "Norway"}, {$set: {"married_status": true}})` | users |
| Decrement the card balance of users from Denmark by $500. | `db.users.updateMany({"address.country": "Denmark"}, {$inc: {"card.balance": -500}})` | users |
| Set the card type of users from Finland to 'American Express' if their current card type is not 'Visa' or 'Mastercard'. | `db.users.updateMany({"address.country": "Finland", "card.card_type": {$nin: ["Visa", "Mastercard"]}}, {$set: {"card.card_type": "American Express"}})` | users |
| Update the country code for users from Portugal to 'PRT'. | `db.users.updateMany({"address.country": "Portugal"}, {$set: {"address.country_code": "PRT"}})` | users |
| Change the email addresses of single users from Greece to a new domain (e.g., '@newemail.gr'). | `db.users.updateMany({"married_status": false, "address.country": "Greece"}, {$set: {"email": {$concat: ["$email".split("@")[0], "@newemail.gr"]}}})` | users |
| Increment the balance of users with a Mastercard by 25% if their current balance is greater than $7500. | `db.users.updateMany({"card.card_type": "Mastercard", "card.balance": {$gt: "7500"}}, {$mul: {"card.balance": 1.25}})` | users |
| Set the city and state for users from Austria to 'Vienna' and 'Vienna', respectively. | `db.users.updateMany({"address.country": "Austria"}, {$set: {"address.city": "Vienna", "address.state": "Vienna"}})` | users |
| Change the currency code of all users' cards to 'CHF'. | `db.users.updateMany({}, {$set: {"card.currency_code": "CHF"}})` | users |

| Add a new favorite city "Berlin" for all students who love mathematics. | `db.children.updateMany({loveMaths: true}, {$addToSet: {favCity: "Berlin"}})` | children |
| Set the lucky number of the first friend to 9 for all male students who don't love mathematics. | `db.children.updateMany({gender: "male", loveMaths: false}, {$set: {"friends.0.luckyNumber": 9}})` | children |
| Remove the first favorite city for all students whose class is greater than 5. | `db.children.updateMany({class: {$gt: 5}}, {$pop: {favCity: -1}})` | children |
| Increment the lucky number of the second friend by 2 for all students who have at least two friends. | `db.children.updateMany({friends: {$size: {$gte: 2}}}, {$inc: {"friends.1.luckyNumber": 2}})` | children |
| Add a new friend with name "Jack", gender "male", and lucky number 7 for all female students who love mathematics. | `db.children.updateMany({gender: "female", loveMaths: true}, {$push: {friends: {name: "Jack", gender: "male", luckyNumber: 7}}})` | children |
| Set the lucky number of the last friend to 13 for all students whose first name starts with "A". | `db.children.updateMany({first_name: {$regex: /^A/}}, {$set: {"friends.-1.luckyNumber": 13}})` | children |
| Remove the second favorite city for all students who have at least three favorite cities and don't love mathematics. | `db.children.updateMany({favCity: {$size: {$gte: 3}}, loveMaths: false}, {$pull: {favCity: {$slice: ["$favCity", 1, 1]}}})` | children |
| Add a new favorite city "Moscow" for all students whose first friend's lucky number is even. | `db.children.updateMany({"friends.luckyNumber": {$mod: [2, 0]}}, {$addToSet: {favCity: "Moscow"}})` | children |
| Remove the first friend for all students whose first name contains the word "Smith". | `db.children.updateMany({"first_name": /Smith/}, {$pop: {friends: -1}})` | children |

| Set the class to 6 for all students whose first name is "John". | `db.children.updateMany({first_name: "John"}, {$set: {class: 6}})` | children |
| Add a new favorite city "Paris" for all students. | `db.children.updateMany({}, {$addToSet: {favCity: "Paris"}})` | children |
| Set the lucky number of the first friend to 7 for all students. | `db.children.updateMany({}, {$set: {"friends.0.luckyNumber": 7}})` | children |
| Remove the first favorite city for all students whose last name is "Smith". | `db.children.updateMany({last_name: "Smith"}, {$pop: {favCity: -1}})` | children |
| Set the gender of the second friend to "female" for all students who have at least two friends. | `db.children.updateMany({friends: {$size: {$gte: 2}}}, {$set: {"friends.1.gender": "female"}})` | children |
| Add a new friend with name "Bob", gender "male", and lucky number 5 for all students. | `db.children.updateMany({}, {$push: {friends: {name: "Bob", gender: "male", luckyNumber: 5}}})` | children |
| Set the lucky number of the last friend to 10 for all students whose class is 4. | `db.children.updateMany({class: 4}, {$set: {"friends.-1.luckyNumber": 10}})` | children |
| Remove the second favorite city for all students who have at least three favorite cities. | `db.children.updateMany({favCity: {$size: {$gte: 3}}}, {$pull: {favCity: {$slice: ["$favCity", 1, 1]}}})` | children |
| Set the gender to "male" for all students whose first name starts with "A". | `db.children.updateMany({first_name: {$regex: /^A/}}, {$set: {gender: "male"}})` | children |
| Add a new favorite city "Tokyo" for all students who love mathematics. | `db.children.updateMany({loveMaths: true}, {$addToSet: {favCity: "Tokyo"}})` | children |

